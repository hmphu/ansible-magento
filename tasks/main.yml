---

- name: Download Magento in given Version   
  tags: magento
  when: magento_download == 'yes'
  local_action: get_url 
    url=http://www.magentocommerce.com/downloads/assets/{{ magento_version }}/magento-{{ magento_version }}.tar.gz 
    dest={{ magento_download_tmp_dir }}/magento-{{ magento_version }}.tar.gz

- name: Extract Magento  
  tags: magento
  when: magento_download == 'yes'
  unarchive: 
    src="{{ magento_download_tmp_dir }}/magento-{{ magento_version }}.tar.gz" 
    dest={{ magento_install_tmp_dir }}

- name: Copy magento from local 
  tags: magento
  when: magento_download != "yes"
  copy: 
    src={{ magento_copy_local_dir }}
    dest={{ magento_install_tmp_dir }}

- name: Move to Magento-Root-Dir
  tags: magento
  shell: "rsync -av {{ magento_install_tmp_dir }}/magento/* {{ magento_root }}/"

- name: Change User
  tags: magento
  shell: "chown -R {{ magento_webuser }}:{{ magento_webgroup }} {{ magento_root }}/*"
  notify:
    - run magento install
    - verify permissions

- name: Create Magento-Install script
  tags: magento
  template: 
    src=magento-install.j2 
    dest={{ magento_install_tmp_dir }}/magento-install.sh

- name: Remove app/etc/local.xml if exists
  tags: magento
  file: 
    state=absent
    path="{{ magento_root }}/app/etc/local.xml" 

- name: Download magento patch files 
  tags: magento
  with_items: magento_patch_files
  get_url: 
    url={{ item.url }}
    dest={{ magento_root}}/
    
- name: Create patch-script
  tags: magento
  template: 
    src=patch.j2 
    dest={{ magento_root }}/patch.sh

- name: Applay patches
  tags: magento
  command:
    chdir={{ magento_root }} sh patch.sh

- include: "modman.yml"
  tags: 
    - magento
    - modman
  when: magento_modman == "yes"
  
