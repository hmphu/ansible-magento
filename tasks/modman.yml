---
- name: Install modman
  tags:
    - magento
    - modman
  get_url:
    url=https://raw.github.com/colinmollenhour/modman/master/modman
    dest={{ magento_modman_bin_dir }}/modman
    mode="0755"
    owner={{ magento_webuser}}
    group={{ magento_webgroup }}

- name: Check modman dir exists
  tags:
    - magento
    - modman
  register: check_modman
  stat: path={{ magento_root }}/.modman

- name: modman Init magento
  tags:
    - magento
    - modman
  when: check_modman.stat.exists == false
  command: chdir={{ magento_root }} {{ magento_modman_bin_dir }}/modman init

# Include os-specific tasks
- include: "Debian.yml"
  tags:
    - magento
    - modman
  when: ansible_os_family == 'Debian'

- name: Check extensions already checked out
  tags:
    - magento
    - modman
  register: magento_modman_extensions_dirs
  with_items: magento_modman_extensions_git
  local_action: stat
    path={{ magento_download_tmp_dir }}.{{ item.name }}

- name: Update git remote
  tags:
    - magento
    - modman
  when: item[0].stat.isdir is defined and item[0].stat.isdir == true
  with_together:
    - magento_modman_extensions_dirs.results
    - magento_modman_extensions_git
  local_action: shell >
    chdir={{ magento_download_tmp_dir }}/{{ item[1].name }}
    free_form=yes
    git remote set-url {{ item[1].remote|default('origin') }} {{ item[1].repo }}

- name: Install Extensions from git
  tags:
    - magento
    - modman
  with_items: magento_modman_extensions_git
  local_action: git
    repo={{ item.repo }}
    dest={{ magento_download_tmp_dir }}/{{ item.name }}
    remote="{{ item.remote |default('origin') }}"
    key_file="{{ item.key_file |default(None) }}"
    ssh_opts="{{ item.ssh_opts |default(None) }}"
    accept_hostkey="{{ item.accept_hostkey |default('no') }}"
    bare="{{ item.bare |default('no') }}"
    depth="{{ item.depth |default(0) }}"
    executable="{{ item.executable |default('') }}"
    reference="{{ item.reference |default('') }}"
    force="{{ item.force |default('yes') }}"
    update="{{ item.gitupdate |default('yes') }}"

- name: Archive extensions local
  tags:
    - magento
    - modman
  with_items: magento_modman_extensions_git
  local_action: shell
    chdir={{ magento_download_tmp_dir }}/{{ item.name }}
    git archive --format=tar --output={{ magento_download_tmp_dir }}/{{ item.name }}.tar  {{ item.version|default('HEAD') }}

- name: Extract Extensions to Remote
  tags:
    - magento
    - modman
  with_items: magento_modman_extensions_git
  unarchive:
    src={{ magento_download_tmp_dir }}/{{ item.name }}.tar
    dest={{ item.dest }}

- name: Create modman template
  tags:
    - magento
    - modman
  template:
    src=handle_extensions.sh.j2
    dest={{ magento_install_tmp_dir }}/handle_extensions.sh

- name: Notify modman updates
  tags:
    - magento
    - modman
  notify:
    - handle modman extensions links
    - modman deploy-all
  command: /bin/true
